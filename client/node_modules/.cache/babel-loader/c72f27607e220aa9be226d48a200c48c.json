{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Users\\\\Wenhao\\\\Documents\\\\BootCamp\\\\code\\\\Homework\\\\google-book-search\\\\client\\\\src\\\\pages\\\\searchBook.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\";\n\nvar SearchBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBook, _Component);\n\n  function SearchBook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBook(_this.state.search).then(function (res) {\n        console.log(\"this res.data \", res.data.items);\n\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          var results = res.data.items; //map through the array\n\n          results = results.map(function (result) {\n            //store each book information in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          }); // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n\n          _this.setState({\n            books: results,\n            error: \"\"\n          });\n\n          console.log(\"this state\", _this.state);\n        }\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.items\n        });\n      });\n    };\n\n    _this.handleSavedButton = function (event) {\n      event.preventDefault();\n      console.log(_this.state.books);\n\n      var savedBooks = _this.state.books.filter(function (books) {\n        return books.id === event.target.id;\n      }); // savedBooks = savedBooks[0];\n\n\n      alert(\"this is save book\", savedBooks);\n      API.saveBook({\n        title: _this.state.title,\n        author: _this.state.author,\n        synopsis: _this.state.synopsis\n      }).then(_this.setState({\n        message: alert(\"Your book is saved\", savedBooks)\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Find Your Favorite Books\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(SearchResult, {\n        books: this.state.books,\n        handleSavedButton: this.handleSavedButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBook;\n}(Component);\n\nexport default SearchBook;","map":{"version":3,"sources":["D:/Users/Wenhao/Documents/BootCamp/code/Homework/google-book-search/client/src/pages/searchBook.js"],"names":["React","Component","Jumbotron","API","Col","Row","Container","SearchForm","SearchResult","SearchBook","state","search","books","error","message","loadBooks","getBooks","then","res","setState","data","title","author","synopsis","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","getGoogleSearchBook","items","Error","results","map","result","key","id","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","handleSavedButton","savedBooks","filter","alert","saveBook"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\"\n\n\nclass SearchBook extends Component {\n    //create state\n    state = {\n        search: \"\",\n        books: [],\n        error: \"\",\n        message: \"\"\n    };\n\n    componentDidMount() {\n        this.loadBooks();\n      }\n    \n      loadBooks = () => {\n        API.getBooks()\n          .then(res =>\n            this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n          )\n          .catch(err => console.log(err));\n      };\n    \n\n    //function to take value of what enter in the search bar\n    handleInputChange = event => {\n        this.setState({ search: event.target.value })\n    }\n\n    //function to control the submit button of the search form\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // once it clicks it connects to the google book api with the search value\n        API.getGoogleSearchBook(this.state.search)\n            .then(res => {\n                console.log(\"this res.data \",res.data.items)\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                }\n                else {\n                    // store response in a array\n                    let results = res.data.items\n                    //map through the array\n                    results = results.map(result => {\n                        //store each book information in a new object\n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        }\n                        return result;\n                    })\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n                    this.setState({ books: results, error: \"\" })\n                    console.log(\"this state\", this.state);\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    }\n\n    handleSavedButton = event => {\n        event.preventDefault();\n        console.log(this.state.books)\n        let savedBooks = this.state.books.filter(books => books.id === event.target.id)\n        // savedBooks = savedBooks[0];\n        alert(\"this is save book\", savedBooks);\n        API.saveBook({\n            title: this.state.title,\n            author: this.state.author,\n            synopsis: this.state.synopsis\n          })\n            .then(this.setState({ message: alert(\"Your book is saved\", savedBooks) }))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1 className=\"text-black\">Find Your Favorite Books</h1>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\n                </Container>\n            </Container>\n        )\n    }\n\n\n}\n\nexport default SearchBook"]},"metadata":{},"sourceType":"module"}